#!/bin/bash

# Pull from upstream, and push to github.

set -e

function usage () {
    echo >&$1 \
	"usage: $0 [--fetch] [--pull] [--push] [--all]"
}

fetch=false
push=false
pull=false

while [ $# -gt 0 ]
do
    case "$1" in
        --all)
	    push=true
	    pull=true
	    ;;
        --push)
	    push=true
	    ;;
	--pull)
	    pull=true
	    ;;
	--fetch)
	    fetch=true
	    ;;
	-h)
	    usage 1
	    exit 0
	    ;;
	--)
	    shift
	    break
	    ;;
	-*)
	    usage 2
	    exit 1
	    ;;
	*)
	    break
	    ;;
    esac
    shift
done

if ! ${fetch} && ! ${push} && ! ${pull} ; then
    usage 2
    exit 1;
fi

echo "Fetching upstream."
git fetch upstream

if ${pull}; then
    curr_branch=$(git rev-parse --abbrev-ref HEAD)

    # If we're on "upstream" currently, merge.  Otherwise, update the
    # local "upstream" branch without checking it out.
    if [ "$curr_branch" == "upstream" ]; then
	echo "Merging from upstream/master into \"upstream\" local branch (checked out)."
	git merge upstream/master
    else
	echo "Pushing from upstream/master into \"upstream\" local branch (not checked out)."
	git push . upstream/master:upstream
    fi
fi

if ${push}; then
    echo "Pushing \"remotes/upstream/master\" branch to github."
    git push github remotes/upstream/master:upstream/master
fi
